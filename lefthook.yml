# ü•ä Lefthook configuration for Express.js Backend
# https://lefthook.dev/configuration/

# Pre-commit hooks - run on every commit
pre-commit:
  parallel: true
  jobs:
    # TypeScript type checking
    - name: "üîç Type check"
      run: npm run typecheck
      files: git diff --staged --name-only --diff-filter=ACMR
      glob: "*.{ts,tsx}"
      
    # Linting
    - name: "üßπ Lint"
      run: npm run lint
      files: git diff --staged --name-only --diff-filter=ACMR
      glob: "*.{js,ts,json}"
      
    # Build check
    - name: "üî® Build check"
      run: npm run build
      files: git diff --staged --name-only --diff-filter=ACMR
      glob: "*.{ts,tsx,js,json}"
      
    # Security audit
    - name: "üîí Security audit"
      run: npm audit --audit-level=high
      
    # Check for secrets/sensitive data
    - name: "üîê Secret scan"
      run: |
        # Look for actual API keys and secrets (exclude lefthook.yml and lock files)
        FILES=$(git diff --staged --name-only | grep -v -E "(package-lock\.json|lefthook\.yml|\.lock|node_modules)")
        if [ -n "$FILES" ] && echo "$FILES" | xargs grep -l "sk-[a-zA-Z0-9]\{20,\}\|pk_[a-zA-Z0-9]\{20,\}\|-----BEGIN.*PRIVATE" 2>/dev/null; then
          echo "‚ö†Ô∏è  Potential API keys or private keys detected!"
          echo "$FILES" | xargs grep -n "sk-[a-zA-Z0-9]\{20,\}\|pk_[a-zA-Z0-9]\{20,\}\|-----BEGIN.*PRIVATE" 2>/dev/null || true
          echo "Please review the above for sensitive information"
          exit 1
        fi

# Pre-push hooks - run before pushing to remote
pre-push:
  parallel: false
  jobs:
    # Run tests before push
    - name: "üß™ Run tests"
      run: npm run test:smoke
      
    # Final build verification
    - name: "‚ö° Final build"
      run: npm run build
      
    # Dependencies check
    - name: "üì¶ Dependencies check"
      run: npm audit --audit-level=moderate

# Commit message validation
commit-msg:
  jobs:
    - name: "üí¨ Commit message format"
      run: |
        commit_regex='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}'
        commit_msg=$(cat .git/COMMIT_EDITMSG)
        if ! echo "$commit_msg" | grep -qE "$commit_regex"; then
          echo "‚ùå Invalid commit message format!"
          echo "Format: <type>[optional scope]: <description>"
          echo "Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert"
          echo "Example: feat(auth): add user login validation"
          exit 1
        fi

# Post-commit hooks - run after successful commit
post-commit:
  jobs:
    - name: "‚úÖ Commit success"
      run: echo "‚úÖ Commit successful! All checks passed."

# Configuration
colors: true
no_tty: false
min_version: 1.5.0

# Skip hooks for specific scenarios
skip_output:
  - meta
  - summary
  
# Remote configuration (optional)
remote:
  git_url: https://github.com/evilmartians/lefthook
  ref: v1.12.3